(define (cont-frac-iter n d k)
  (define (iter x result)
	(if (= x 0)
		result
		(iter (- x 1)
			  (/ (n x)
				 (+ (d x) result)))))
  (iter k 0))
(define (euler k)
  (+ 2 (cont-frac-iter (lambda (i) 1.0)
					   (lambda (i) (cond ((= i 1) 1)
									     ((= (remainder (+ i 1) 3) 0)
									      (* (/ (+ i 1) 3) 2))
									     (else 1)))
					   k)))
